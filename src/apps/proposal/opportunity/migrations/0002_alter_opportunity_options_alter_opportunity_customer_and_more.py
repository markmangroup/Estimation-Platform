# Generated by Django 4.2 on 2024-09-13 07:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('task', '0002_alter_task_options_alter_task_internal_id'),
        ('customer', '0002_alter_customer_options'),
        ('opportunity', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='opportunity',
            options={'verbose_name': 'Proposal Opportunitie'},
        ),
        migrations.AlterField(
            model_name='opportunity',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='customer.customer'),
        ),
        migrations.AlterField(
            model_name='opportunity',
            name='design_estimation_note',
            field=models.TextField(blank=True, null=True, verbose_name='Design/Estimation Note'),
        ),
        migrations.AlterField(
            model_name='opportunity',
            name='expected_close',
            field=models.DateField(verbose_name='Expected Close'),
        ),
        migrations.AlterField(
            model_name='opportunity',
            name='expected_margin',
            field=models.FloatField(verbose_name='Expected Margin'),
        ),
        migrations.AlterField(
            model_name='opportunity',
            name='margin_amount',
            field=models.CharField(verbose_name='Margin Amount'),
        ),
        migrations.AlterField(
            model_name='opportunity',
            name='projected_total',
            field=models.CharField(verbose_name='Projected Total'),
        ),
        migrations.AlterField(
            model_name='opportunity',
            name='scope',
            field=models.TextField(blank=True, null=True, verbose_name='Scope'),
        ),
        migrations.AlterField(
            model_name='opportunity',
            name='win_probability',
            field=models.CharField(blank=True, null=True, verbose_name='Win Probability'),
        ),
        migrations.CreateModel(
            name='TaskMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Task Code')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Task Description')),
                ('opportunity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_mapping_opportunity', to='opportunity.opportunity')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_mapping_tasks', to='task.task')),
            ],
            options={
                'verbose_name': 'Proposal Task Mapping',
            },
        ),
        migrations.CreateModel(
            name='SelectTaskCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('opportunity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opportunity', to='opportunity.opportunity')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='task.task')),
            ],
            options={
                'verbose_name': 'Proposal TaskCode',
            },
        ),
        migrations.CreateModel(
            name='PreliminaryMaterialList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('irricad_imported_quantities', models.CharField(blank=True, max_length=255, null=True, verbose_name='Irricad Imported Quantities')),
                ('glue_and_additional_mat_quantities', models.CharField(blank=True, max_length=255, null=True, verbose_name="Glue & Additional Mat'l Quantities")),
                ('combined_quantities_from_both_import', models.CharField(blank=True, max_length=255, null=True, verbose_name='Combined Quantities from both Import')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('item_number', models.CharField(max_length=255, verbose_name='Item Number')),
                ('category', models.CharField(max_length=255, verbose_name='Category')),
                ('bag_bundle_quantity', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bag/Bundle Quantity')),
                ('opportunity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='opportunity_preliminary_list', to='opportunity.opportunity')),
            ],
            options={
                'verbose_name': 'Proposal Preliminary Material',
            },
        ),
        migrations.CreateModel(
            name='MaterialList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('item_number', models.CharField(max_length=255, verbose_name='Item Number')),
                ('opportunity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='opportunity_materials', to='opportunity.opportunity')),
            ],
            options={
                'verbose_name': 'Proposal Material List',
            },
        ),
        migrations.CreateModel(
            name='GlueAndAdditionalMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('item_number', models.CharField(max_length=255, verbose_name='Item Number')),
                ('category', models.CharField(max_length=255, verbose_name='Category')),
                ('opportunity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='opportunity_glue_and_additional_material', to='opportunity.opportunity')),
            ],
            options={
                'verbose_name': 'Proposal Glue & Additional Material',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document', models.FileField(upload_to='documents/', verbose_name='Document')),
                ('stage', models.CharField(choices=[('Select Task Code', 'Select Task Code'), ('Upload CAD File', 'Upload CAD File'), ('Material List', 'Material List'), ('Task Mapping', 'Task Mapping'), ('Generate Estimate', 'Generate Estimate'), ('Proposal Creation', 'Proposal Creation'), ('Proposal Preview', 'Proposal Preview'), ('Final Document', 'Final Document')], default='Select Task Code', max_length=50, verbose_name='Stage')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('opportunity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='opportunity.opportunity')),
            ],
            options={
                'verbose_name': 'Proposal Document',
            },
        ),
        migrations.CreateModel(
            name='AssignedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_assign', models.BooleanField(default=False, verbose_name='Is Assigned Product/Labour')),
                ('quantity', models.FloatField(blank=True, null=True, verbose_name='Quantity')),
                ('item_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Code')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('standard_cost', models.FloatField(blank=True, null=True, verbose_name='Standard Cost')),
                ('vendor_quoted_cost', models.FloatField(blank=True, null=True, verbose_name='Vendor Quoted Cost')),
                ('vendor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Vendor')),
                ('comment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Comment')),
                ('labor_task', models.CharField(blank=True, max_length=255, null=True, verbose_name='Labor Task')),
                ('local_cost', models.FloatField(blank=True, null=True, verbose_name='Labor Local Cost')),
                ('out_of_town_cost', models.FloatField(blank=True, null=True, verbose_name='Out Of Town Cost')),
                ('task_mapping', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_products', to='opportunity.taskmapping')),
            ],
            options={
                'verbose_name': 'Proposal Assigned Product',
            },
        ),
    ]
