# Generated by Django 4.2 on 2025-10-01 15:31

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customer', '0001_initial'),
        ('task', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Opportunity',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('internal_id', models.IntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Internal Id')),
                ('sales_rep', models.CharField(max_length=255, verbose_name='Sales Rep')),
                ('location', models.CharField(max_length=255, verbose_name='Location')),
                ('opportunity_class', models.CharField(max_length=255, verbose_name='Opportunity Class')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('document_number', models.CharField(max_length=255, verbose_name='Document Number')),
                ('ranch_address', models.TextField(blank=True, max_length=255, null=True, verbose_name='Ranch Address')),
                ('opportunity_status', models.CharField(max_length=255, verbose_name='Opportunity Status')),
                ('projected_total', models.CharField(max_length=255, verbose_name='Projected Total')),
                ('expected_margin', models.FloatField(verbose_name='Expected Margin')),
                ('margin_amount', models.CharField(max_length=255, verbose_name='Margin Amount')),
                ('win_probability', models.CharField(blank=True, max_length=255, null=True, verbose_name='Win Probability')),
                ('expected_close', models.DateField(verbose_name='Expected Close')),
                ('opportunity_notes', models.TextField(blank=True, null=True, verbose_name='Opportunity Notes')),
                ('scope', models.TextField(blank=True, null=True, verbose_name='Scope')),
                ('designer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Designer')),
                ('estimator', models.CharField(blank=True, max_length=255, null=True, verbose_name='Estimator')),
                ('pump_electrical_designer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Pump & Electrical Designer')),
                ('design_estimation_note', models.TextField(blank=True, null=True, verbose_name='Design/Estimation Note')),
                ('estimation_stage', models.CharField(choices=[('Select Task Code', 'Select Task Code'), ('Upload CAD File', 'Upload CAD File'), ('Material List', 'Material List'), ('Task Mapping', 'Task Mapping'), ('Generate Estimate', 'Generate Estimate'), ('Proposal Creation', 'Proposal Creation'), ('Proposal Preview', 'Proposal Preview'), ('Final Document', 'Final Document')], default='Select Task Code', max_length=50, verbose_name='Estimation Stage')),
                ('job', models.CharField(blank=True, max_length=255, null=True, verbose_name='Job')),
                ('job_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Job Name')),
                ('ranch_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ranch Name')),
                ('project', models.CharField(blank=True, max_length=255, null=True, verbose_name='Project')),
                ('tax_rate', models.CharField(blank=True, default='25.00%', max_length=50, null=True, verbose_name='Tax Rate')),
                ('term_and_condition', models.JSONField(blank=True, null=True, verbose_name='Term & Condition')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='customer.customer')),
            ],
            options={
                'verbose_name': 'Proposal Opportunities',
            },
        ),
        migrations.CreateModel(
            name='TaskMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_assign_task', models.BooleanField(default=False, verbose_name='Is Assign Task')),
                ('assign_to', models.CharField(blank=True, max_length=255, null=True, verbose_name='Assign to')),
                ('code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Task Code')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Task Description')),
                ('labor_gp_percent', models.FloatField(blank=True, default=25.0, max_length=255, null=True, verbose_name='Labor GP %')),
                ('mat_gp_percent', models.FloatField(blank=True, default=10.0, max_length=255, null=True, verbose_name='Mat GP %')),
                ('s_and_h', models.FloatField(blank=True, default=10.0, max_length=255, null=True, verbose_name='S & H')),
                ('include', models.BooleanField(default=True, verbose_name='Include Items')),
                ('extra_description', models.JSONField(blank=True, null=True, verbose_name='Extra Description')),
                ('approve', models.CharField(blank=True, max_length=255, null=True, verbose_name='Approve & Initial')),
                ('linked_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_mapping_linked_tasks', to='opportunity.taskmapping')),
                ('opportunity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_mapping_opportunity', to='opportunity.opportunity')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_mapping_tasks', to='task.task')),
            ],
            options={
                'verbose_name': 'Proposal Task Mapping',
            },
        ),
        migrations.CreateModel(
            name='SelectTaskCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('task_description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Task Description')),
                ('opportunity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opportunity', to='opportunity.opportunity')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='task.task')),
            ],
            options={
                'verbose_name': 'Proposal TaskCode',
            },
        ),
        migrations.CreateModel(
            name='ProposalCreation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group_name', models.CharField(max_length=255, verbose_name='Group Name')),
                ('opportunity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposal_creation_opportunity', to='opportunity.opportunity')),
                ('task_mapping', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposal_tasks', to='opportunity.taskmapping')),
            ],
            options={
                'verbose_name': 'Proposal Creation',
            },
        ),
        migrations.CreateModel(
            name='PreliminaryMaterialList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('irricad_imported_quantities', models.CharField(blank=True, max_length=255, null=True, verbose_name='Irricad Imported Quantities')),
                ('glue_and_additional_mat_quantities', models.CharField(blank=True, max_length=255, null=True, verbose_name="Glue & Additional Mat'l Quantities")),
                ('combined_quantities_from_both_import', models.CharField(blank=True, max_length=255, null=True, verbose_name='Combined Quantities from both Import')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('item_number', models.CharField(max_length=255, verbose_name='Item Number')),
                ('category', models.CharField(max_length=255, verbose_name='Category')),
                ('bag_bundle_quantity', models.CharField(blank=True, max_length=255, null=True, verbose_name='Bag/Bundle Quantity')),
                ('opportunity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='opportunity_preliminary_list', to='opportunity.opportunity')),
            ],
            options={
                'verbose_name': 'Proposal Preliminary Material',
            },
        ),
        migrations.CreateModel(
            name='MaterialList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('item_number', models.CharField(max_length=255, verbose_name='Item Number')),
                ('opportunity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='opportunity_materials', to='opportunity.opportunity')),
            ],
            options={
                'verbose_name': 'Proposal Material List',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Invoice Number')),
                ('invoice_data', models.DateTimeField(blank=True, null=True, verbose_name='Invoice Data')),
                ('total_amount', models.FloatField(default=0.0, verbose_name='Total Amount')),
                ('deposit_amount', models.FloatField(default=0.0, verbose_name='Deposit Amount')),
                ('deu_amount', models.FloatField(default=0.0, verbose_name='Deu Amount')),
                ('tax_rate', models.FloatField(default=0.0, verbose_name='Tax Rate')),
                ('sales_tax', models.FloatField(default=0.0, verbose_name='Sales Tax')),
                ('other_tax', models.FloatField(default=0.0, verbose_name='Other Tax')),
                ('deposit_address', models.TextField(blank=True, null=True, verbose_name='Deposit Address')),
                ('billing_address', models.TextField(blank=True, null=True, verbose_name='Remit To')),
                ('buyer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Buyer')),
                ('buyer_date', models.DateTimeField(blank=True, null=True, verbose_name='Buyer Date')),
                ('buyer_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Buyer Name')),
                ('buyer_position', models.CharField(blank=True, max_length=255, null=True, verbose_name='Buyer Position')),
                ('seller', models.CharField(blank=True, max_length=255, null=True, verbose_name='Seller')),
                ('seller_date', models.DateTimeField(blank=True, null=True, verbose_name='Seller Date')),
                ('seller_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Seller Name')),
                ('seller_position', models.CharField(blank=True, max_length=255, null=True, verbose_name='Seller Position')),
                ('opportunity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_opportunity', to='opportunity.opportunity')),
            ],
            options={
                'verbose_name': 'Proposal Invoice',
            },
        ),
        migrations.CreateModel(
            name='GlueAndAdditionalMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.IntegerField(verbose_name='Quantity')),
                ('description', models.CharField(max_length=255, verbose_name='Description')),
                ('item_number', models.CharField(max_length=255, verbose_name='Item Number')),
                ('category', models.CharField(blank=True, max_length=255, null=True, verbose_name='Category')),
                ('opportunity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='opportunity_glue_and_additional_material', to='opportunity.opportunity')),
            ],
            options={
                'verbose_name': 'Proposal Glue & Additional Material',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document', models.FileField(upload_to='documents/', verbose_name='Document')),
                ('stage', models.CharField(choices=[('Select Task Code', 'Select Task Code'), ('Upload CAD File', 'Upload CAD File'), ('Material List', 'Material List'), ('Task Mapping', 'Task Mapping'), ('Generate Estimate', 'Generate Estimate'), ('Proposal Creation', 'Proposal Creation'), ('Proposal Preview', 'Proposal Preview'), ('Final Document', 'Final Document')], default='Select Task Code', max_length=50, verbose_name='Stage')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('opportunity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='opportunity.opportunity')),
            ],
            options={
                'verbose_name': 'Proposal Document',
            },
        ),
        migrations.CreateModel(
            name='AssignedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_assign', models.BooleanField(default=False, verbose_name='Is Assigned Product/Labour')),
                ('is_select', models.BooleanField(default=False, verbose_name='Is Selected')),
                ('quantity', models.FloatField(blank=True, null=True, verbose_name='Quantity')),
                ('item_code', models.CharField(blank=True, max_length=255, null=True, verbose_name='Item Code')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('standard_cost', models.FloatField(blank=True, null=True, verbose_name='Standard Cost')),
                ('vendor_quoted_cost', models.FloatField(blank=True, null=True, verbose_name='Vendor Quoted Cost')),
                ('vendor', models.CharField(blank=True, max_length=255, null=True, verbose_name='Vendor')),
                ('comment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Comment')),
                ('labor_task', models.CharField(blank=True, max_length=255, null=True, verbose_name='Labor Task')),
                ('local_cost', models.FloatField(blank=True, null=True, verbose_name='Labor Local Cost')),
                ('out_of_town_cost', models.FloatField(blank=True, null=True, verbose_name='Out Of Town Cost')),
                ('sequence', models.IntegerField(default=0)),
                ('task_mapping', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_products', to='opportunity.taskmapping')),
            ],
            options={
                'verbose_name': 'Proposal Assigned Product',
            },
        ),
    ]
