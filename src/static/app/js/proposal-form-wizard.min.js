$(document).ready(function () {
    const url = new URL(window.location.href);
    const stage = url.searchParams.get('stage');

    // Determine the current stage
    var currentStage = stage || Stagevalue; // Use URL parameter if available, otherwise use Stagevalue

    // Define all possible stages
    var allStages = [
        "Select Task Code",
        "Upload CAD File",
        "Material List",
        "Task Mapping",
        "Generate Estimate",
        "Proposal Creation",
        "Proposal Preview",
        "Final Document"
    ];

    // Determine completed stages based on Stagevalue
    var completedStages = allStages.slice(0, allStages.indexOf(Stagevalue) + 1);

    var stageMapping = {
        "Select Task Code": 0,
        "Upload CAD File": 1,
        "Material List": 2,
        "Task Mapping": 3,
        "Generate Estimate": 4,
        "Proposal Creation": 5,
        "Proposal Preview": 6,
        "Final Document": 7
    };

    // Initialize the wizard
    $(".icons-tab-steps").steps({
        headerTag: "h6",
        bodyTag: "fieldset",
        transitionEffect: "fade",
        startIndex: stageMapping[currentStage],
        titleTemplate: '<span class="step">#index#</span> #title#',
        labels: { finish: "Submit" },
        onStepChanging: function (event, currentIndex, newIndex) {
            if (newIndex > currentIndex) {
                var isValid = true;
                var currentFieldset = $(this).find("fieldset").eq(currentIndex);

                currentFieldset.find('.wizard-required').each(function () {
                    var thisValue = $(this).val();
                    var errorMessage = "";
                    var dataValue = $(this).data('value');

                    if ($(this).is('select')) {
                        if (thisValue === "" || $(this).find('option:selected').text() === "None") {
                            errorMessage = "Please make sure to update or change statuses as needed and verify them.";
                        }
                    } else if ($(this).is('input')) {
                        var inputType = $(this).attr('type');

                        if (inputType === 'text') {
                            if (thisValue === "") {
                                errorMessage = "Could you please confirm that the quantity was filled correctly?";
                            } else if (thisValue != dataValue) {
                                errorMessage = `Quantity does not match for PROJ016968 1/2. Please resolve it....`;
                            }
                        } else if (inputType === 'date') {
                            if (thisValue === "") {
                                errorMessage = "Make sure update date, please verify and update the dates...";
                            } else if (new Date(thisValue) < new Date() && new Date(thisValue).toDateString() !== new Date().toDateString()) {
                                errorMessage = "Please make sure that the date selected is a current or future date and not a date that has already passed.";
                            }
                        }
                    } else {
                        if (thisValue === "") {
                            errorMessage = "Could you please confirm that the quantity was filled correctly?";
                        }
                    }

                    if (errorMessage) {
                        $(this).siblings(".wizard-form-error").text(errorMessage).slideDown();
                        isValid = false;

                        Swal.fire({
                            text: errorMessage,
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                        return false; // Stop further validation for this step
                    } else {
                        $(this).siblings(".wizard-form-error").slideUp();
                    }
                });

                return isValid;
            }

            return true;
        },
        onFinished: function (event, currentIndex) {
            var isValid = true;
            var currentFieldset = $(this).find("fieldset").eq(currentIndex);

            currentFieldset.find('.wizard-required').each(function () {
                var thisValue = $(this).val();
                var isDisabled = $("#field-disabled").prop('disabled');
                var errorMessage = "";
                var dataValue = $(this).data('value');

                if ($(this).is('select')) {
                    if (thisValue === "" || $(this).find('option:selected').text() === "None") {
                        errorMessage = "Please make sure to update or change statuses as needed and verify them.";
                    }
                } else if (!isDisabled) {
                    console.log("Not Disabled...........");
                    errorMessage = "Here are some inspection still not confirm, please make sure all inspection are confirmed...";
                } else if ($(this).is('input')) {
                    var inputType = $(this).attr('type');

                    if (inputType === 'text') {
                        if (thisValue === "") {
                            errorMessage = "Could you please confirm that the quantity was filled correctly?";
                        } else if (thisValue != dataValue) {
                            errorMessage = `Quantity does not match for PROJ016968 1/2. Please resolve it....`;
                        }
                    } else if (inputType === 'date') {
                        if (thisValue === "") {
                            errorMessage = "Make sure update date, please verify and update the dates...";
                        } else if (new Date(thisValue) < new Date() && new Date(thisValue).toDateString() !== new Date().toDateString()) {
                            errorMessage = "Please make sure that the date selected is a current or future date and not a date that has already passed.";
                        }
                    }
                } else {
                    if (thisValue === "") {
                        errorMessage = "Could you please confirm that the quantity was filled correctly?";
                    }
                }

                if (errorMessage) {
                    $(this).siblings(".wizard-form-error").text(errorMessage).slideDown();
                    isValid = false;

                    Swal.fire({
                        text: errorMessage,
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                    return false; // Stop further validation for this step
                } else {
                    $(this).siblings(".wizard-form-error").slideUp();
                }
            });

            if (isValid) {
                Swal.fire({
                    title: 'Form Submitted!',
                    text: 'Your form has been submitted successfully.',
                    icon: 'success',
                    confirmButtonText: 'OK'
                });
            }
        }
    });

    // Initialize date picker
    $(".pickadate").pickadate();

    // Add custom classes to navigation buttons
    $('.wizard .actions a[role="menuitem"]').addClass("btn btn-primary");
    $('.wizard .actions a[href="#previous"]').addClass("btn btn-secondary");

    // Update the wizard steps based on the current stage and completed stages
    const $stepsList = $('#steps-uid-0');
    const $listItems = $stepsList.find('li');

    // Mark completed stages as done
    completedStages.forEach(function (stage) {
        var index = stageMapping[stage];
        if (index !== undefined) {
            $listItems.eq(index)
                .removeClass('disabled')
                .addClass('done');
        }
    });

    // Set the current stage
    var currentStageIndex = stageMapping[currentStage];
    if (currentStageIndex !== undefined) {
        $listItems.eq(currentStageIndex)
            .addClass('current')
            .attr('aria-selected', 'true');
    }
});